Object subclass: #Dice	instanceVariableNames: 'quantityFaces'	classVariableNames: ''	poolDictionaries: ''	category: 'Game'!!Dice methodsFor: 'initialization' stamp: 'Lucas 9/5/2018 21:13'!initializeWithFaceValue: aValue	quantityFaces := aValue! !!Dice methodsFor: 'accessing' stamp: 'Lucas 9/5/2018 21:17'!faceValue ^ quantityFaces! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Dice class	instanceVariableNames: ''!!Dice class methodsFor: 'initialization' stamp: 'Lucas 9/5/2018 21:59'!withNumberOfFaces: aValue	self assertValidDiceValue: aValue.	^ self new initializeWithFaceValue: aValue! !!Dice class methodsFor: 'asserting' stamp: 'LucasLivrone 9/8/2018 12:04'!assertValidDiceValue: aValue(aValue <3) ifTrue: [AssertionFailure signal: 'A dice must have 3 or more faces']. ! !Object subclass: #Player	instanceVariableNames: 'name position dice rollNumber rank'	classVariableNames: ''	poolDictionaries: ''	category: 'Game'!!Player methodsFor: 'accessing' stamp: 'LucasLivrone 9/9/2018 16:08'!showRank	^ rank! !!Player methodsFor: 'accessing' stamp: 'LucasLivrone 9/9/2018 16:58'!showDice	^ dice! !!Player methodsFor: 'accessing' stamp: 'LucasLivrone 9/8/2018 12:26'!showRollNumber	^ rollNumber ! !!Player methodsFor: 'accessing' stamp: 'LucasLivrone 9/8/2018 13:28'!showPosition	^ position ! !!Player methodsFor: 'accessing' stamp: 'LucasLivrone 9/9/2018 13:52'!showName	^ name! !!Player methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:31'!initializeWithDiceCollection: aDiceCollection	position := 0.	dice := aDiceCollection .! !!Player methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:51'!initializeWithDice: aDice and: aName	position := 0.	name := aName.	dice := aDice.! !!Player methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:52'!initializeWithDiceCollection: aDiceCollection andName: aName	position := 0.	name := aName.	dice := aDiceCollection .! !!Player methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:48'!initializeWithDice: aDice	position := 0.	dice := aDice.! !!Player methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:51'!initializeWithDice: aDice andName: aName	position := 0.	name := aName.	dice := aDice.! !!Player methodsFor: 'updating' stamp: 'LucasLivrone 9/9/2018 16:07'!rankedWithValue: aValue	rank := aValue! !!Player methodsFor: 'updating' stamp: 'LucasLivrone 9/8/2018 14:05'!advancePositionWithValue: aValue	position := position + aValue .! !!Player methodsFor: 'updating' stamp: 'LucasLivrone 9/8/2018 13:57'!advancePosition	position := position + rollNumber .! !!Player methodsFor: 'rolling' stamp: 'LucasLivrone 9/9/2018 16:25'!roll	| rand selectedDice |	rand := Random new.	dice size == 1		ifTrue: [ rollNumber := (rand next * (dice faceValue - 1)) truncated + 1 ]		ifFalse: [ selectedDice := (rand next * dice size) truncated + 1.	"elige un dado random de todos los que tiene"			rand := Random new.			rollNumber := (rand next * ((dice at: selectedDice) faceValue - 1)) truncated + 1			"Genera un random entre 0 y 1 (float), lo multiplico por (caras del dado elegido - 1) y luego le sumo 1" ]! !!Player methodsFor: 'rolling' stamp: 'LucasLivrone 9/9/2018 17:12'!rollRandomDiceCollection	| rand selectedDice |	rand := Random new.	selectedDice := (rand next * (dice size) ) truncated + 1.	"elige un dado random de todos los que tiene"	rand := Random new.	rollNumber := (rand next * ((dice at: selectedDice) faceValue - 1)) truncated + 1	"Genera un random entre 0 y 1 (float), lo multiplico por (caras del dado elegido - 1) y luego le sumo 1"! !!Player methodsFor: 'rolling' stamp: 'LucasLivrone 9/9/2018 13:39'!rollCharged	rollNumber := #(4 1 2 1 2)	"el tablero de prueba tiene 10 posiciones, el dado cargado asegura llegar"! !!Player methodsFor: 'rolling' stamp: 'LucasLivrone 9/9/2018 13:39'!rollAlwaysFive	rollNumber := 5! !!Player methodsFor: 'rolling' stamp: 'LucasLivrone 9/9/2018 13:39'!rollRandom	| rand |	rand := Random new.	rollNumber := (rand next * (dice faceValue - 1)) truncated + 1	"Genera un random entre 0 y 1 (float), lo multiplico por (caras del dado - 1) y luego le sumo 1"! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Player class	instanceVariableNames: ''!!Player class methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:27'!withDice: aDice^ self new initializeWithDice: aDice! !!Player class methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:55'!withDiceAndName: aDice and: aName^ self new initializeWithDice: aDice andName: aName. ! !!Player class methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 16:15'!withDiceCollection: aDiceCollection andName: aName^ self new initializeWithDiceCollection: aDiceCollection andName: aName! !!Player class methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 13:31'!withDiceCollection: aDiceCollection^ self new initializeWithDiceCollection: aDiceCollection ! !Object subclass: #Table	instanceVariableNames: 'positions winner finish'	classVariableNames: ''	poolDictionaries: ''	category: 'Game'!!Table methodsFor: 'accessing' stamp: 'LucasLivrone 9/9/2018 15:31'!showWinner	^ winner! !!Table methodsFor: 'accessing' stamp: 'LucasLivrone 9/8/2018 17:48'!showPositions	^ positions! !!Table methodsFor: 'accessing' stamp: 'LucasLivrone 9/9/2018 14:12'!showFinish	^ finish! !!Table methodsFor: 'initialization' stamp: 'LucasLivrone 9/9/2018 14:12'!initializeWithSize: aSize	positions := aSize.	finish := 0! !!Table methodsFor: 'updating' stamp: 'LucasLivrone 9/9/2018 15:30'!winnerIs: aWinner	winner := aWinner! !!Table methodsFor: 'updating' stamp: 'LucasLivrone 9/9/2018 14:14'!finishGame	finish := 1! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Table class	instanceVariableNames: ''!!Table class methodsFor: 'initialization' stamp: 'LucasLivrone 9/8/2018 17:47'!withSize: aSize^ self new initializeWithSize: aSize! !